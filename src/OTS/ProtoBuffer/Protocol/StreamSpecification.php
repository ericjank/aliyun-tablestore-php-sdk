<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.StreamSpecification</code>
 */
class StreamSpecification extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>required bool enable_stream = 1;</code>
     */
    private $enable_stream = false;
    private $has_enable_stream = false;
    /**
     * Generated from protobuf field <code>optional int32 expiration_time = 2;</code>
     */
    private $expiration_time = 0;
    private $has_expiration_time = false;

    public function __construct() {
        \GPBMetadata\TableStore::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>required bool enable_stream = 1;</code>
     * @return bool
     */
    public function getEnableStream()
    {
        return $this->enable_stream;
    }

    /**
     * Generated from protobuf field <code>required bool enable_stream = 1;</code>
     * @param bool $var
     * @return $this
     */
    public function setEnableStream($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_stream = $var;
        $this->has_enable_stream = true;

        return $this;
    }

    public function hasEnableStream()
    {
        return $this->has_enable_stream;
    }

    /**
     * Generated from protobuf field <code>optional int32 expiration_time = 2;</code>
     * @return int
     */
    public function getExpirationTime()
    {
        return $this->expiration_time;
    }

    /**
     * Generated from protobuf field <code>optional int32 expiration_time = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setExpirationTime($var)
    {
        GPBUtil::checkInt32($var);
        $this->expiration_time = $var;
        $this->has_expiration_time = true;

        return $this;
    }

    public function hasExpirationTime()
    {
        return $this->has_expiration_time;
    }

}

