<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store_filter.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.SingleColumnValueFilter</code>
 */
class SingleColumnValueFilter extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.ComparatorType comparator = 1;</code>
     */
    private $comparator = 0;
    private $has_comparator = false;
    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     */
    private $column_name = '';
    private $has_column_name = false;
    /**
     * Serialized SQLVariant
     *
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     */
    private $column_value = '';
    private $has_column_value = false;
    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     */
    private $filter_if_missing = false;
    private $has_filter_if_missing = false;
    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     */
    private $latest_version_only = false;
    private $has_latest_version_only = false;

    public function __construct() {
        \GPBMetadata\TableStoreFilter::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.ComparatorType comparator = 1;</code>
     * @return int
     */
    public function getComparator()
    {
        return $this->comparator;
    }

    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.ComparatorType comparator = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setComparator($var)
    {
        GPBUtil::checkEnum($var, \Aliyun\OTS\ProtoBuffer\Protocol\ComparatorType::class);
        $this->comparator = $var;
        $this->has_comparator = true;

        return $this;
    }

    public function hasComparator()
    {
        return $this->has_comparator;
    }

    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     * @return string
     */
    public function getColumnName()
    {
        return $this->column_name;
    }

    /**
     * Generated from protobuf field <code>required string column_name = 2;</code>
     * @param string $var
     * @return $this
     */
    public function setColumnName($var)
    {
        GPBUtil::checkString($var, True);
        $this->column_name = $var;
        $this->has_column_name = true;

        return $this;
    }

    public function hasColumnName()
    {
        return $this->has_column_name;
    }

    /**
     * Serialized SQLVariant
     *
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     * @return string
     */
    public function getColumnValue()
    {
        return $this->column_value;
    }

    /**
     * Serialized SQLVariant
     *
     * Generated from protobuf field <code>required bytes column_value = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setColumnValue($var)
    {
        GPBUtil::checkString($var, False);
        $this->column_value = $var;
        $this->has_column_value = true;

        return $this;
    }

    public function hasColumnValue()
    {
        return $this->has_column_value;
    }

    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     * @return bool
     */
    public function getFilterIfMissing()
    {
        return $this->filter_if_missing;
    }

    /**
     * Generated from protobuf field <code>required bool filter_if_missing = 4;</code>
     * @param bool $var
     * @return $this
     */
    public function setFilterIfMissing($var)
    {
        GPBUtil::checkBool($var);
        $this->filter_if_missing = $var;
        $this->has_filter_if_missing = true;

        return $this;
    }

    public function hasFilterIfMissing()
    {
        return $this->has_filter_if_missing;
    }

    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     * @return bool
     */
    public function getLatestVersionOnly()
    {
        return $this->latest_version_only;
    }

    /**
     * Generated from protobuf field <code>required bool latest_version_only = 5;</code>
     * @param bool $var
     * @return $this
     */
    public function setLatestVersionOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->latest_version_only = $var;
        $this->has_latest_version_only = true;

        return $this;
    }

    public function hasLatestVersionOnly()
    {
        return $this->has_latest_version_only;
    }

}

