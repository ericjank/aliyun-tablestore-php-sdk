<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.ReservedThroughput</code>
 */
class ReservedThroughput extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.CapacityUnit capacity_unit = 1;</code>
     */
    private $capacity_unit = null;
    private $has_capacity_unit = false;

    public function __construct() {
        \GPBMetadata\TableStore::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.CapacityUnit capacity_unit = 1;</code>
     * @return \Aliyun\OTS\ProtoBuffer\Protocol\CapacityUnit
     */
    public function getCapacityUnit()
    {
        return $this->capacity_unit;
    }

    /**
     * Generated from protobuf field <code>required .aliyun.OTS.ProtoBuffer.Protocol.CapacityUnit capacity_unit = 1;</code>
     * @param \Aliyun\OTS\ProtoBuffer\Protocol\CapacityUnit $var
     * @return $this
     */
    public function setCapacityUnit($var)
    {
        GPBUtil::checkMessage($var, \Aliyun\OTS\ProtoBuffer\Protocol\CapacityUnit::class);
        $this->capacity_unit = $var;
        $this->has_capacity_unit = true;

        return $this;
    }

    public function hasCapacityUnit()
    {
        return $this->has_capacity_unit;
    }

}

