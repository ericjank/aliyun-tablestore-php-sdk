<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: table_store_filter.proto

namespace Aliyun\OTS\ProtoBuffer\Protocol;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>aliyun.OTS.ProtoBuffer.Protocol.ColumnPaginationFilter</code>
 */
class ColumnPaginationFilter extends \Aliyun\OTS\ProtoBuffer\Protocol\Message
{
    /**
     * Generated from protobuf field <code>required int32 offset = 1;</code>
     */
    private $offset = 0;
    private $has_offset = false;
    /**
     * Generated from protobuf field <code>required int32 limit = 2;</code>
     */
    private $limit = 0;
    private $has_limit = false;

    public function __construct() {
        \GPBMetadata\TableStoreFilter::initOnce();
        parent::__construct();
    }

    /**
     * Generated from protobuf field <code>required int32 offset = 1;</code>
     * @return int
     */
    public function getOffset()
    {
        return $this->offset;
    }

    /**
     * Generated from protobuf field <code>required int32 offset = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setOffset($var)
    {
        GPBUtil::checkInt32($var);
        $this->offset = $var;
        $this->has_offset = true;

        return $this;
    }

    public function hasOffset()
    {
        return $this->has_offset;
    }

    /**
     * Generated from protobuf field <code>required int32 limit = 2;</code>
     * @return int
     */
    public function getLimit()
    {
        return $this->limit;
    }

    /**
     * Generated from protobuf field <code>required int32 limit = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setLimit($var)
    {
        GPBUtil::checkInt32($var);
        $this->limit = $var;
        $this->has_limit = true;

        return $this;
    }

    public function hasLimit()
    {
        return $this->has_limit;
    }

}

